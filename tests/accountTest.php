<?php

require __DIR__ . '/../vendor/autoload.php';
use LibBankaccount\Account;

/**
 * Test class for Account.
 * Generated by PHPUnit on 2013-10-27 at 17:00:41.
 */
class AccountTest extends PHPUnit_Framework_TestCase
{
    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    public function testGetAccountNoFromIban()
    {
      $iban = "DExx 1009 0044 0532 0130 18";

      $account = new Account();
      $account->setIban($iban);

      $this->assertEquals("532013018",$account->getAccountNo());
    }

    public function testGetBlzFromIban()
    {
      $iban = "DExx 1009 0044 0532 0130 18";

      $account = new Account();
      $account->setIban($iban);

      $this->assertEquals("10090044", $account->getBlz());
    }

    public function testGetBlzFromBic()
    {
      $bic = "HALLDE2HXXX";

      $account = new Account();
      $account->setBic($bic);

      $this->assertEquals("25060180",$account->getBlz());
    }

    public function testGetBlzFromBicShort()
    {
      $bic = "HALLDE2H";

      $account = new Account();
      $account->setBic($bic);

      $this->assertEquals("25060180",$account->getBlz());
    }

    public function testGetIbanFromAccountBlz()
    {
      $accountNo = "402532800";
      $blz = "49092650";

      $account = new Account();
      $account->setAccountNo($accountNo);
      $account->setBlz($blz);

      $this->assertEquals("DE76490926500402532800", $account->getIban());
    }

    public function testGetIbanFromAccountBlzSpaces()
    {
      $accountNo = "402 532 800";
      $blz = "490 926 50";

      $account = new Account();
      $account->setAccountNo($accountNo);
      $account->setBlz($blz);

      $this->assertEquals("DE76490926500402532800", $account->getIban());
    }

    public function testGetIbanFromAccountBIC()
    {
      $accountNo = "402532800";
      $bic = "GENODEM1LUB";

      $account = new Account();
      $account->setAccountNo($accountNo);
      $account->setBic($bic);

      $this->assertEquals("DE76490926500402532800", $account->getIban());
    }

    public function testGetIbanFromAccountBICShort()
    {
      $accountNo = "4479925203";
      $bic = "MLPBDE61";

      $account = new Account();
      $account->setAccountNo($accountNo);
      $account->setBic($bic);

      $this->assertEquals("DE29672300004479925203", $account->getIban());
    }

    public function testGetBicFromBlz()
    {
      $blz = "67230000";

      $account = new Account();
      $account->setBlz($blz);

      $this->assertEquals($account->getBic(), "MLPBDE61XXX");
    }

    public function testGetBicFromBlzSpaces()
    {
      $blz = "672 300 00";

      $account = new Account();
      $account->setBlz($blz);

      $this->assertEquals($account->getBic(), "MLPBDE61XXX");
    }

    public function testGetBicFromIban()
    {
      $iban = "DE76 4909 2650 0402 5328 00";

      $account = new Account();
      $account->setIban($iban);

      $this->assertEquals($account->getBic(), "GENODEM1LUB");
    }

    public function testValidateAccountNo()
    {
      $blz = '49092650';
      $accountNo = '402532800';

      $account = new Account();
      $account->setAccountNo($accountNo);
      $account->setBlz($blz);

      $this->assertTrue($account->validateAccountNo());
    }

    public function testValidateAccountNoInvalid()
    {
      $blz = '67230000';
      $accountNo = '4479925288';

      $account = new Account();
      $account->setAccountNo($accountNo);
      $account->setBlz($blz);

      $this->assertFalse($account->validateAccountNo());
    }

    public function testValidateBIC()
    {
      $bic = "MLPBDE61XXX";

      $account = new Account();
      $account->setBic($bic);

      $this->assertTrue($account->validateBIC());
    }

    public function testValidateBICInvalid()
    {
      $bic = "MLPBDE6XXXX";

      $account = new Account();
      $account->setBic($bic);

      $this->assertFalse($account->validateBIC());
    }

    public function testValidateBlz()
    {
      $blz = '67230000';

      $account = new Account();
      $account->setBlz($blz);

      $this->assertTrue($account->validateBlz());
    }

    public function testValidateBlzInvalid()
    {
      $blz = '67231111';

      $account = new Account();
      $account->setBlz($blz);

      $this->assertFalse($account->validateBlz());
    }

    public function testValidateIban()
    {
      $iban = "DE76 4909 2650 0402 5328 00";

      $account = new Account();
      $account->setIban($iban);

      $this->assertTrue($account->validateIban());
    }
}
?>
